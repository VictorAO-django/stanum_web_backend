# Generated by Django 4.2.4 on 2025-07-27 05:05

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('tier', models.CharField(choices=[('basic', 'Basic'), ('pro', 'Professional'), ('elite', 'Elite')], default='basic', max_length=20)),
                ('years_experience', models.IntegerField(default=0)),
                ('max_challenge_accounts', models.IntegerField(default=3)),
                ('max_funded_accounts', models.IntegerField(default=1)),
                ('subscription_active', models.BooleanField(default=False)),
                ('subscription_expires', models.DateTimeField(blank=True, null=True)),
                ('total_challenges_attempted', models.IntegerField(default=0)),
                ('challenges_passed', models.IntegerField(default=0)),
                ('total_profit_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trading_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metaapi_account_id', models.CharField(db_index=True, max_length=100, unique=True)),
                ('login', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('challenge', 'Challenge Account'), ('funded', 'Funded Account'), ('live', 'Live Account')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('disabled', 'Disabled'), ('challenge_passed', 'Challenge Passed'), ('expired', 'Expired'), ('terminated', 'Terminated')], default='active', max_length=20)),
                ('server', models.CharField(default='MetaQuotes-Demo', max_length=100)),
                ('leverage', models.IntegerField(default=100)),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('equity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('margin', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('free_margin', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('margin_level', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('risk_daily_loss_limit', models.DecimalField(decimal_places=4, default=Decimal('0.05'), max_digits=5)),
                ('risk_max_drawdown', models.DecimalField(decimal_places=4, default=Decimal('0.10'), max_digits=5)),
                ('risk_profit_target', models.DecimalField(decimal_places=4, default=Decimal('0.08'), max_digits=5)),
                ('max_daily_trades', models.IntegerField(default=50)),
                ('disable_reason', models.TextField(blank=True, null=True)),
                ('disabled_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_accounts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_id', models.CharField(db_index=True, max_length=100)),
                ('order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('symbol', models.CharField(max_length=20)),
                ('type', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=10)),
                ('volume', models.DecimalField(decimal_places=5, max_digits=10)),
                ('open_price', models.DecimalField(decimal_places=5, max_digits=15)),
                ('current_price', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True)),
                ('close_price', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True)),
                ('stop_loss', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True)),
                ('take_profit', models.DecimalField(blank=True, decimal_places=5, max_digits=15, null=True)),
                ('profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('swap', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='open', max_length=20)),
                ('open_time', models.DateTimeField()),
                ('close_time', models.DateTimeField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'trades',
                'ordering': ['-open_time'],
            },
        ),
        migrations.CreateModel(
            name='DailyAccountStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('starting_balance', models.DecimalField(decimal_places=2, max_digits=15)),
                ('starting_equity', models.DecimalField(decimal_places=2, max_digits=15)),
                ('highest_equity', models.DecimalField(decimal_places=2, max_digits=15)),
                ('lowest_equity', models.DecimalField(decimal_places=2, max_digits=15)),
                ('ending_equity', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('trades_count', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('daily_pnl', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('gross_profit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('gross_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('max_drawdown_pct', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('daily_loss_pct', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_stats', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'daily_account_stats',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='AccountActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('account_created', 'Account Created'), ('account_disabled', 'Account Disabled'), ('challenge_passed', 'Challenge Passed'), ('position_opened', 'Position Opened'), ('position_closed', 'Position Closed'), ('deal_executed', 'Deal Executed'), ('balance_update', 'Balance Update'), ('risk_violation', 'Risk Violation'), ('account_promoted', 'Account Promoted')], max_length=30)),
                ('description', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='trading.tradingaccount')),
                ('related_trade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='trading.trade')),
            ],
            options={
                'db_table': 'account_activities',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['user', 'account_type'], name='trading_acc_user_id_62e197_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['status'], name='trading_acc_status_fa72c6_idx'),
        ),
        migrations.AddIndex(
            model_name='tradingaccount',
            index=models.Index(fields=['metaapi_account_id'], name='trading_acc_metaapi_5fa1fc_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['account', 'status'], name='trades_account_63f66f_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['symbol', 'open_time'], name='trades_symbol_490a6e_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['position_id'], name='trades_positio_3368ab_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='trade',
            unique_together={('account', 'position_id')},
        ),
        migrations.AddIndex(
            model_name='dailyaccountstats',
            index=models.Index(fields=['account', 'date'], name='daily_accou_account_210be9_idx'),
        ),
        migrations.AddIndex(
            model_name='dailyaccountstats',
            index=models.Index(fields=['date'], name='daily_accou_date_bb6cc1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dailyaccountstats',
            unique_together={('account', 'date')},
        ),
        migrations.AddIndex(
            model_name='accountactivity',
            index=models.Index(fields=['account', 'activity_type'], name='account_act_account_f49cdf_idx'),
        ),
        migrations.AddIndex(
            model_name='accountactivity',
            index=models.Index(fields=['timestamp'], name='account_act_timesta_2afdc7_idx'),
        ),
    ]
